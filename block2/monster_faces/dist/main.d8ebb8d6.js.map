{"version":3,"sources":["scripts/monster.js","scripts/webfonts.js","scripts/main.js"],"names":["monsterURL","createMonster","document","getElementById","fetch","method","then","response","json","monster","displayBodies","body_container","querySelector","bodies","map","body","color","join","innerHTML","filterColor","filter","displayFaces","face_container","allFaces","face","faces","j","length","faceDiv","createElement","setAttribute","appendChild","monsterFace","chooseBody","bodyDiv","hasChildNodes","removeChild","childNodes","chosenBody","monsterImage","chooseFace","face_number","bodyButtons","addEventListener","event","target","matches","firstChild","clickFace","WebFont","load","google","families"],"mappings":"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","file":"main.d8ebb8d6.js","sourceRoot":"..","sourcesContent":["\n//global Variables\nconst monsterURL = 'https://shakerbaker78.github.io./amy_baker_portfolio/block2/monster_faces/data/monster.json';\nconst createMonster = document.getElementById(\"makeMonster\");\n\n\n// get monster info from the JSON file\n// fetch the local json data\n\nfetch(monsterURL, {method: 'GET'})\n.then(response => response.json())\n.then(json => {\n        //Create a monster object\n        const monster = json['monsters'];\n        \n\n\n// display all the body choices    \nfunction displayBodies(){\n    // loop through all items in the bodies object and display the bodies (that sounds so morbid!)\n    const body_container = document.querySelector(`.body_container`);\n    const bodies = monster.map(body => \n    `<div class = \"body\" id = \"${body.color}Body\">\n    <img class \"monsterBody\" id = \"${body.color}BodyImg\" src = \"${body.body}\" alt = \"${body.color} Body\">\n    </div>`).join(``);\n\n    // Add the list items to the html\n    body_container.innerHTML = bodies;\n\n }//End Display Bodies Function\n// Call display bodies    \n displayBodies()\n\n    //function to filter the monster object by color. \n    function filterColor(color){\n        return monster.filter(monster => monster.color == color);\n    }\n\n    // Display all the faces of a given color\n    function displayFaces(color){\n        const face_container = document.querySelector(`.face_container`);\n       \n        //filter the monster file to an object with only the values from the selected color\n        const allFaces = filterColor(color);\n\n        // create a faces object with all of the faces of one color in it.\n        const face = allFaces[0].faces\n\n        //Iterate throught the faces aray and find the correct face\n        for (let j = 0; j < face.length; j++){\n \n                //Add the divs that hold the face images\n                let faceDiv = document.createElement('div')\n                faceDiv.setAttribute('class', 'face')\n                faceDiv.setAttribute('id', 'face' + [j]);\n                face_container.appendChild(faceDiv)\n\n                //Add the face images\n                let monsterFace = document.createElement('img');\n                monsterFace.setAttribute('class', 'monsterFace');\n                monsterFace.setAttribute('id', 'faceImg' + [j]);\n                monsterFace.setAttribute('src', face[j]);\n                monsterFace.setAttribute('alt',\"face \" + (j + 1));\n                document.querySelector('#face' + [j]).appendChild(monsterFace);\n            \n        \n        }// End for loop        \n    \n    }// End Display Faces Function\n    //Call display faces (should I move this to the HTML onload?)\n    displayFaces(\"yellow\")\n\n  \n    // make a monster function to call the correct body. This will also pass in the color variable for the faces\n    //Function takes a color and face number parameter\n    function chooseBody(color) {\n        const bodyDiv = document.querySelector('.chosenBody');\n    \n        // Remove the current child of bodyDiv\n        if (bodyDiv.hasChildNodes()) {\n            bodyDiv.removeChild(bodyDiv.childNodes[0]);\n        }\n          \n\n        //filter the monster object and match the selected color \n        const chosenBody = filterColor(color)\n\n\n        bodyDiv.setAttribute('id', 'body' + chosenBody[0].color );\n      \n        //dislay the correct colored body\n        let monsterImage = document.createElement('img');\n        monsterImage.setAttribute('class', 'variableBody');\n        monsterImage.setAttribute('src', chosenBody[0].body);\n        monsterImage.setAttribute('alt', chosenBody[0].color + \" Body\");\n        bodyDiv.appendChild(monsterImage);\n            \n            \n    } //End Choose Body Function\n    \n\n\n    function chooseFace(color,face_number){\n        const faces = filterColor(color)\n        const face = faces[0].faces\n        const faceDiv = document.querySelector('.chosenFace');\n\n        // Remove the current child of faceDiv\n        if (faceDiv.hasChildNodes()) {\n            faceDiv.removeChild(faceDiv.childNodes[0]);\n        }\n\n        //Iterate through the faces aray and find the correct face\n        for (let j = 0; j < face.length; j++){\n            if (j == face_number) {\n\n\n                //Add the correct face to the page\n                let monsterFace = document.createElement('img');\n                monsterFace.setAttribute('class', 'variableFace' + (face_number + 1));\n                monsterFace.setAttribute('src', face[j]);\n                monsterFace.setAttribute('alt',\"face \" + (face_number + 1));\n                document.querySelector('.chosenFace').appendChild(monsterFace);\n            }//end if statement\n        \n        }//end for loop\n    }// end choose face\n\n\n//Event Listeners\n    const bodyButtons = document.querySelector(`.body_container`);\n    const face_container = document.querySelector(`.face_container`)\n    \n    // This listens for any clicks on the monster body pictures and displays the body and the matching faces. \n    bodyButtons.addEventListener(\"click\", function(event){\n        if(event.target.matches(\"#blueBodyImg\")) {\n            chooseBody(\"blue\");\n            //Remove the existing content in the face container\n            while(face_container.firstChild) {\n                face_container.removeChild(face_container.firstChild);\n            }\n            displayFaces(\"blue\")\n            clickFace(\"blue\")\n        \n        };\n        if(event.target.matches(\"#greenBodyImg\")) {\n            chooseBody(\"green\");\n            //Remove the existing content in the face container\n            while(face_container.firstChild) {\n                face_container.removeChild(face_container.firstChild);\n            }\n            displayFaces(\"green\")\n            clickFace(\"green\")\n            \n    \n        };\n        if(event.target.matches(\"#yellowBodyImg\")) {\n            chooseBody(\"yellow\");\n            //Remove the existing content in the face container\n            while(face_container.firstChild) {\n                face_container.removeChild(face_container.firstChild);\n            }\n            displayFaces(\"yellow\")\n            clickFace(\"yellow\")\n            \n        };\n        if(event.target.matches(\"#orangeBodyImg\")) {\n            chooseBody(\"orange\");\n            //Remove the existing content in the face container\n            while(face_container.firstChild) {\n                face_container.removeChild(face_container.firstChild);\n            }\n            displayFaces(\"orange\")\n            clickFace(\"orange\")\n            \n        };\n    }); // End the body buttons\n    \n    \n    // This listens for any clicks on the monster body pictures and displays the body and the matching faces.\n    // It takes color as a parameter\n    function clickFace(color){\n     \n        face_container.addEventListener(\"click\", function(event){\n            if(event.target.matches(\"#faceImg0\")) {\n                chooseFace(color, 0)\n            \n            };\n            if(event.target.matches(\"#faceImg1\")) {\n                chooseFace(color, 1)\n                \n    \n            };\n            if(event.target.matches(\"#faceImg2\")) {\n                chooseFace(color, 2)\n                \n            };\n            if(event.target.matches(\"#faceImg3\")) {\n                chooseFace(color, 3)\n                \n            };\n        }); // End the face buttons\n    };\n\n}); // End Fetch Response\n","\nWebFont.load({\n    google: {\n      families: ['Arvo', 'Open+Sans' , 'Merriweather' , 'Special+Elite']\n    }\n  });\n","// Imports  \nimport * as monster from './monster.js';\nimport * as fonts from './webfonts.js';\n//import * as events from './events.js';\n\n"]}